---
- name:         VNF Inventory
  hosts:        localhost
  gather_facts: no
  become:       no
  connection:   local

  # ----- VARS -----------------------------------------------------------------

  vars:
    vnf:         "unknown"
    repo_prefix: "https://raw.githubusercontent.com/BernardTsai/applications/master"

  # ----- TASKS ----------------------------------------------------------------

  tasks:
  - name: Create Task UUID
    set_fact:
      uuid: "{{ 1000000000 | random | to_uuid }}"

  - name: Load VNF Descriptor
    uri:
      url:            "{{repo_prefix}}/{{vnf}}/descriptor.yml"
      validate_certs: no
      return_content: yes
    ignore_errors: yes
    changed_when:  false
    register:      descriptor

  - name: Validating VNF Descriptor
    fail:
      msg: "Unable to load descriptor"
    when: descriptor.status != 200
    changed_when: false

  - name: Load VNF Credentials
    set_fact:
      vnfd: "{{ descriptor.content | from_yaml }}"

  - name: Load Cloud Credentials
    set_fact:
      cloud: "{{ clouds.get( vnfd.tenant.cloud ) }}"

  - name: Create Customer clouds.yml Configuration
    template:
      src:  clouds.yml.j2
      dest: "/tmp/{{uuid}}.yml"
    changed_when: false

  - name: Check Connectivity
    wait_for:
      host: "{{ cloud.auth.auth_url | urlsplit('hostname') }}"
      port: "{{ cloud.auth.auth_url | urlsplit('port') }}"
      timeout: 1
      msg: "Unable to connect to Cloud API"

  - name: Install Shade
    pip:
      name: shade
  
  - name: Obtain Inventory Data (may take some time)
    script: ./scripts/inventory.py
    environment:
      OS_CLIENT_CONFIG_FILE: "/tmp/{{uuid}}.yml"
      OS_CLOUD:              "{{ vnfd.tenant.cloud }}"
      OS_PROJECT_NAME:       "{{ vnfd.tenant.name }}"
      OS_PASSWORD:           "{{ vnfd.tenant.password }}"
    register: data
    changed_when: false

  - name: Get Timestamp
    set_fact:
      timestamp: "{{ansible_date_time.iso8601_micro}}"

  - name: Upload Inventory
    uri:
      url:    "https://github.com/BernardTsai/applications/{{vnf}}/inventory/{{timestamp}}.yaml"
      method: "PUT"
      headers:
        Authorization: "token {{token}}"
      body: "{'path':'https://github.com/BernardTsai/applications/{{vnf}}/inventory/{{timestamp}}.yaml', 'message':'{{timestamp}} - Inventory of VNF {{vnf}}', 'content':'{{data.stdout}}'}"

  - name: Store Inventory
    copy:
      content: "{{ data.stdout }}"
      dest:    "/tmp/{{uuid}}.data.yml"

  - name: Location of Inventory
    debug:
      msg: "/tmp/{{uuid}}.data.yml"
